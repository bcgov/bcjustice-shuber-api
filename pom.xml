<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ca.bc.gov.jag.shersched</groupId>
	<artifactId>shersched-api</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>Sheriff Scheduler Persistence and REST application</name>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.0.RELEASE</version>
	</parent>

	<properties>
		<!-- NOTE: fix platform dependent builds -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- NOTE: override Spring version of 1.6 -->
		<java.version>1.8</java.version>

		<!-- disable running of JUnit tests by default, override with -DskipTests=false -->
		<skipTests>true</skipTests>

		<!-- JUnit 5 -->
		<junit.jupiter.version>5.1.0</junit.jupiter.version>
		<junit.vintage.version>5.1.0</junit.vintage.version>
		<junit.platform.version>1.1.0</junit.platform.version>

		<!-- Springfox / Swagger -->
		<springfox.version>2.8.0</springfox.version>

		<!-- Main class for Spring Boot -->
		<start-class>ca.bc.gov.jag.shuber.Application</start-class>

		<!-- Sonarqube properties -->
		<sonar.junit.reportPaths>target/surefire-reports</sonar.junit.reportPaths>
		<sonar.jacoco.reportPaths>target/coverage-reports/jacoco-ut.exec, target/coverage-reports/jacoco-it.exec</sonar.jacoco.reportPaths>
		<sonar.exclusions>**/persistence/model/*.java</sonar.exclusions>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>

		<!-- adds Spring REST functionality -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		
		<!-- enables HAL browser for exploring end points -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-hal-browser</artifactId>
		</dependency>

		<!-- enables Swagger generation -->
		<!-- The HAL Browser replicates similar functionality -->
		<!-- NOTE: 2.8.1 is a custom build of the springfox library to work with Spring 2.0.0 since Spring 
				   deprecated some of their API in preference of newer Java functions. Until this is resolved
				   by the maintainers of springfox, this custom version MUST be used, otherwise
				   springfox functionality MUST be disabled. See SwaggerConfig.java and disable all @Import
		 -->
		<!-- 
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-data-rest</artifactId>
 		    <version>${springfox.version}</version>
		</dependency>
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger2</artifactId>
		    <version>${springfox.version}</version>
		</dependency>
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-bean-validators</artifactId>
		    <version>${springfox.version}</version>
		</dependency>
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger-ui</artifactId>
		    <version>${springfox.version}</version>
		</dependency>
		-->

		<!-- JDBC driver -->
		<!-- 
		<dependency>
			<groupId>com.oracle</groupId> 
			<artifactId>ojdbc7</artifactId> 
			<version>12.1.0.1</version> 
		</dependency> 
		-->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.2.1</version>
		</dependency>


		<!-- Testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- internal DB for JUnit tests -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- JUnit 5 -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<version>${junit.platform.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-engine</artifactId>
			<version>${junit.platform.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<version>${junit.platform.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<compilerArgument>-Xlint:all</compilerArgument>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<!-- NOTE: newer version 2.20.1 has an issue and crashes -->
				<version>2.19.1</version>
				<configuration>
					<verbose>true</verbose>
					<argLine>${surefireArgLine}</argLine>
					<skipTests>${skipTests}</skipTests>
					<excludes>
						<exclude>**/*IT.java</exclude>
						<exclude>**/*ITCase.java</exclude>
					</excludes>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.junit.platform</groupId>
						<artifactId>junit-platform-surefire-provider</artifactId>
						<version>${junit.platform.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<!-- NOTE: newer version 2.20.1 has an issue and crashes -->
				<version>2.19.1</version>
				<configuration>
					<argLine>${failsafeArgLine}</argLine>
					<skipTests>${skipTests}</skipTests>
					<excludes>
						<exclude>**/*Test.java</exclude>
						<exclude>**/*TestCase.java</exclude>
					</excludes>
					<additionalClasspathElements>
						<!-- NOTE: workaround for integration tests not finding the @SpringBootApplication 
							class -->
						<additionalClasspathElement>${project.build.directory}/${project.artifactId}-${project.version}.jar.original</additionalClasspathElement>
					</additionalClasspathElements>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.0</version>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- NOTE: required for Spring snapshots and unofficial versions. -->
	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<url>http://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<url>http://repo.spring.io/milestone</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<url>http://repo.spring.io/snapshot</url>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<url>http://repo.spring.io/milestone</url>
		</pluginRepository>
	</pluginRepositories>

	<profiles>
		<profile>
			<id>java8</id>
			<activation>
				<jdk>8</jdk>
			</activation>
			<dependencies>
				<!-- NOTE: java 8 includes JAXB by default. -->
			</dependencies>
		</profile>
		<profile>
			<id>java9</id>
			<activation>
				<jdk>9</jdk>
			</activation>
			<dependencies>
				<!-- NOTE: include JAXB for java 9 since it is a module and is excluded. -->
				<dependency>
					<groupId>javax.xml.bind</groupId>
					<artifactId>jaxb-api</artifactId>
					<version>2.3.0</version>
					<scope>compile</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

</project>
