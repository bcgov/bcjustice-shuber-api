<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog 
	  xmlns="http://www.liquibase.org/xml/ns/dbchangelog" 
	  xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" 
	  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">

    
    <!--
        catalogName="${POSTGRES_CATALOG}" schemaName="${POSTGRES_SCHEMA}" 
        baseTableCatalogName="${POSTGRES_CATALOG}" baseTableSchemaName="${POSTGRES_SCHEMA}" referencedTableCatalogName="${POSTGRES_CATALOG}" referencedTableSchemaName="${POSTGRES_SCHEMA}" 
    -->

    <changeSet author="Carol Geisler" id="tag0">
    	<tagDatabase tag="auth_data_dev_start"/>
    </changeSet>

    <!-- This changeset was created to populate some preliminary data into the auth tables to facilitate development and testing. 
         Records for API Scopes and App Roles should be defined for use in prod as the model is refined. -->

    <!-- API Scope records -->
    
    <changeSet author="Carol Geisler" id="INS_apsc_Default_Write">
      <insert catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="api_scope">
          <column name="api_scope_id" type="UUID" valueComputed="${POSTGRES_EXT_SCHEMA}.uuid_generate_v4()"/>
          <column name="api_scope_string" type="VARCHAR(100)" value="Default_Write"/>
          <column name="description" type="VARCHAR(200)" value="To facilitate initial integration with Siteminder and authorization, this is one of two default Scopes. As the security model is refined, these should be replaced by function specific scopes."/>
          <column name="read_only_ind" type="INTEGER" value="0"/>
          <column name="updated_by" type="VARCHAR(32)" value="SCRIPT_APSC_PROD"/>
      </insert>
      <rollback>
         <delete catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="api_scope">
              <where>api_scope_string='Default_Write'</where>
          </delete>
      </rollback>
    </changeSet>
    
    <changeSet author="Carol Geisler" id="INS_apsc_Default_Read_Only">
      <insert catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="api_scope">
          <column name="api_scope_id" type="UUID" valueComputed="${POSTGRES_EXT_SCHEMA}.uuid_generate_v4()"/>
          <column name="api_scope_string" type="VARCHAR(100)" value="Default_Read_Only"/>
          <column name="description" type="VARCHAR(200)" value="To facilitate initial integration with Siteminder and authorization, this is one of two default Scopes. As the security model is refined, these should be replaced by function specific scopes."/>
          <column name="read_only_ind" type="INTEGER" value="1"/>
          <column name="updated_by" type="VARCHAR(32)" value="SCRIPT_APSC_PROD"/>
      </insert>
      <rollback>
         <delete catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="api_scope">
              <where>api_scope_string='Default_Read_Only'</where>
          </delete>
      </rollback>
    </changeSet>
        
        
    <!-- App Role records -->

    <changeSet author="Carol Geisler" id="INS_aprl_READ_WRITE_ALL">
      <insert catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_role">
          <column name="app_role_id" type="UUID" valueComputed="${POSTGRES_EXT_SCHEMA}.uuid_generate_v4()"/>
          <column name="app_role_name" type="VARCHAR(32)" value="READ_WRITE_ALL"/>
          <column name="description" type="VARCHAR(200)" value="To facilitate initial integration with Siteminder and authorization, this is one of two default Roles. As the security model is refined, these should be replaced by business specific roles."/>
          <column name="updated_by" type="VARCHAR(32)" value="SCRIPT_APRL_PROD"/>
      </insert>
      <rollback>
         <delete catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_role">
              <where>app_role_name='READ_WRITE_ALL'</where>
          </delete>
      </rollback>
    </changeSet>
    
    <changeSet author="Carol Geisler" id="INS_aprl_READ_ALL">
      <insert catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_role">
          <column name="app_role_id" type="UUID" valueComputed="${POSTGRES_EXT_SCHEMA}.uuid_generate_v4()"/>
          <column name="app_role_name" type="VARCHAR(32)" value="READ_ALL"/>
          <column name="description" type="VARCHAR(200)" value="To facilitate initial integration with Siteminder and authorization, this is one of two default Roles. As the security model is refined, these should be replaced by business specific roles."/>
          <column name="updated_by" type="VARCHAR(32)" value="SCRIPT_APRL_PROD"/>
      </insert>
      <rollback>
         <delete catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_role">
              <where>app_role_name='READ_ALL'</where>
          </delete>
      </rollback>
    </changeSet>
    

    <!-- Role Scope XRef Records -->
    
    <changeSet author="Carol Geisler" id="INS_aprlapsc_READ_WRITE_ALL_Default_Write">
      <insert catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_role_api_scope">
          <column name="app_role_api_scope_id" type="UUID" valueComputed="${POSTGRES_EXT_SCHEMA}.uuid_generate_v4()"/>
          <column name="app_role_id" type="UUID" valueComputed="(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_WRITE_ALL')"/>
          <column name="api_scope_id" type="UUID" valueComputed="(SELECT s.api_scope_id FROM ${POSTGRES_SCHEMA}.api_scope s WHERE s.api_scope_string = 'Default_Write')"/>
          <column name="updated_by" type="VARCHAR(32)" value="SCRIPT_APRLAPSC_PROD"/>
      </insert>
      <rollback>
         <delete catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_role_api_scope">
              <where>app_role_id=(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_WRITE_ALL') AND api_scope_id=(SELECT s.api_scope_id FROM ${POSTGRES_SCHEMA}.api_scope s WHERE s.api_scope_string = 'Default_Write')</where>
          </delete>
      </rollback>
    </changeSet>
    
    <changeSet author="Carol Geisler" id="INS_aprlapsc_READ_WRITE_ALL_Default_Read_Only">
      <insert catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_role_api_scope">
          <column name="app_role_api_scope_id" type="UUID" valueComputed="${POSTGRES_EXT_SCHEMA}.uuid_generate_v4()"/>
          <column name="app_role_id" type="UUID" valueComputed="(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_WRITE_ALL')"/>
          <column name="api_scope_id" type="UUID" valueComputed="(SELECT s.api_scope_id FROM ${POSTGRES_SCHEMA}.api_scope s WHERE s.api_scope_string = 'Default_Read_Only')"/>
          <column name="updated_by" type="VARCHAR(32)" value="SCRIPT_APRLAPSC_PROD"/>
      </insert>
      <rollback>
         <delete catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_role_api_scope">
              <where>app_role_id=(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_WRITE_ALL') AND api_scope_id=(SELECT s.api_scope_id FROM ${POSTGRES_SCHEMA}.api_scope s WHERE s.api_scope_string = 'Default_Read_Only')</where>
          </delete>
      </rollback>
    </changeSet>
    
    <changeSet author="Carol Geisler" id="INS_aprlapsc_READ_ALL_Default_Read_Only">
      <insert catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_role_api_scope">
          <column name="app_role_api_scope_id" type="UUID" valueComputed="${POSTGRES_EXT_SCHEMA}.uuid_generate_v4()"/>
          <column name="app_role_id" type="UUID" valueComputed="(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_ALL')"/>
          <column name="api_scope_id" type="UUID" valueComputed="(SELECT s.api_scope_id FROM ${POSTGRES_SCHEMA}.api_scope s WHERE s.api_scope_string = 'Default_Read_Only')"/>
          <column name="updated_by" type="VARCHAR(32)" value="SCRIPT_APRLAPSC_PROD"/>
      </insert>
      <rollback>
         <delete catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_role_api_scope">
              <where>app_role_id=(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_ALL') AND api_scope_id=(SELECT s.api_scope_id FROM ${POSTGRES_SCHEMA}.api_scope s WHERE s.api_scope_string = 'Default_Read_Only')</where>
          </delete>
      </rollback>
    </changeSet>
    

    <!-- App User Records -->  

    <changeSet author="Carol Geisler" id="INS_usr_JENNIPOT">
      <insert catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_user">
          <column name="app_user_id" type="UUID" valueComputed="${POSTGRES_EXT_SCHEMA}.uuid_generate_v4()"/>
          <column name="user_auth_id" type="VARCHAR(32)" value="JENNIPOT"/>
          <column name="display_name" type="VARCHAR(100)" value="Jenn Potter"/>
          <column name="system_account_ind" type="INTEGER" valueNumeric="0"/>
          <column name="default_location_id" type="UUID" valueComputed="(SELECT c.courthouse_id FROM ${POSTGRES_SCHEMA}.courthouse c WHERE c.courthouse_cd = 'VIC')"/>
          <column name="updated_by" type="VARCHAR(32)" value="SCRIPT_USR_PROD"/>
      </insert>
      <rollback>
         <delete catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_user">
              <where>user_auth_id='JENNIPOT'</where>
          </delete>
      </rollback>
    </changeSet>
    
    <changeSet author="Carol Geisler" id="INS_usr_CARGEISL">
      <insert catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_user">
          <column name="app_user_id" type="UUID" valueComputed="${POSTGRES_EXT_SCHEMA}.uuid_generate_v4()"/>
          <column name="user_auth_id" type="VARCHAR(32)" value="CARGEISL"/>
          <column name="display_name" type="VARCHAR(100)" value="Carol Geisler"/>
          <column name="system_account_ind" type="INTEGER" valueNumeric="0"/>
          <column name="default_location_id" type="UUID" valueComputed="(SELECT c.courthouse_id FROM ${POSTGRES_SCHEMA}.courthouse c WHERE c.courthouse_cd = 'VIC')"/>
          <column name="updated_by" type="VARCHAR(32)" value="SCRIPT_USR_PROD"/>
      </insert>
      <rollback>
         <delete catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_user">
              <where>user_auth_id='CARGEISL'</where>
          </delete>
      </rollback>
    </changeSet>
    
    <changeSet author="Carol Geisler" id="INS_usr_HMCQUAY">
      <insert catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_user">
          <column name="app_user_id" type="UUID" valueComputed="${POSTGRES_EXT_SCHEMA}.uuid_generate_v4()"/>
          <column name="user_auth_id" type="VARCHAR(32)" value="HMCQUAY"/>
          <column name="display_name" type="VARCHAR(100)" value="Holly McQuay"/>
          <column name="system_account_ind" type="INTEGER" valueNumeric="0"/>
          <column name="default_location_id" type="UUID" valueComputed="(SELECT c.courthouse_id FROM ${POSTGRES_SCHEMA}.courthouse c WHERE c.courthouse_cd = 'CHL')"/>
          <column name="updated_by" type="VARCHAR(32)" value="SCRIPT_USR_PROD"/>
      </insert>
      <rollback>
         <delete catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_user">
              <where>user_auth_id='HMCQUAY'</where>
          </delete>
      </rollback>
    </changeSet>
    
    <changeSet author="Carol Geisler" id="INS_usr_CMCQUAY">
      <insert catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_user">
          <column name="app_user_id" type="UUID" valueComputed="${POSTGRES_EXT_SCHEMA}.uuid_generate_v4()"/>
          <column name="user_auth_id" type="VARCHAR(32)" value="CMCQUAY"/>
          <column name="display_name" type="VARCHAR(100)" value="Colter McQuay"/>
          <column name="system_account_ind" type="INTEGER" valueNumeric="0"/>
          <column name="default_location_id" type="UUID" valueComputed="(SELECT c.courthouse_id FROM ${POSTGRES_SCHEMA}.courthouse c WHERE c.courthouse_cd = 'CHL')"/>
          <column name="updated_by" type="VARCHAR(32)" value="SCRIPT_USR_PROD"/>
      </insert>
      <rollback>
         <delete catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_user">
              <where>user_auth_id='CMCQUAY'</where>
          </delete>
      </rollback>
    </changeSet>
    
    <changeSet author="Carol Geisler" id="INS_usr_LIQUIBASE">
      <insert catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_user">
          <column name="app_user_id" type="UUID" valueComputed="${POSTGRES_EXT_SCHEMA}.uuid_generate_v4()"/>
          <column name="user_auth_id" type="VARCHAR(32)" value="LIQUIBASE"/>
          <column name="display_name" type="VARCHAR(100)" value="Liquibase Script"/>
          <column name="system_account_ind" type="INTEGER" valueNumeric="1"/>
          <column name="default_location_id" type="UUID" valueComputed="(SELECT c.courthouse_id FROM ${POSTGRES_SCHEMA}.courthouse c WHERE c.courthouse_cd = '')"/>
          <column name="updated_by" type="VARCHAR(32)" value="SCRIPT_USR_PROD"/>
      </insert>
      <rollback>
         <delete catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_user">
              <where>user_auth_id='LIQUIBASE'</where>
          </delete>
      </rollback>
    </changeSet>
    

    <!-- App User Role XRef Records -->
    
    <changeSet author="Carol Geisler" id="INS_apusrl_JENNIPOT_READ_WRITE_ALL_VIC">
      <insert catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_user_role">
          <column name="app_user_role_id" type="UUID" valueComputed="${POSTGRES_EXT_SCHEMA}.uuid_generate_v4()"/>
          <column name="app_user_id" type="UUID" valueComputed="(SELECT u.app_user_id FROM ${POSTGRES_SCHEMA}.app_user u WHERE u.user_auth_id= 'JENNIPOT')"/>
          <column name="app_role_id" type="UUID" valueComputed="(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_WRITE_ALL')"/>
          <column name="location_id" type="UUID" valueComputed="(SELECT c.courthouse_id FROM ${POSTGRES_SCHEMA}.courthouse c WHERE c.courthouse_cd = 'VIC')"/>
          <column name="updated_by" type="VARCHAR(32)" value="SCRIPT_APUSRL_PROD"/>
      </insert>
      <rollback>
         <delete catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_user_role">
              <where>app_user_id=(SELECT u.app_user_id FROM ${POSTGRES_SCHEMA}.app_user u WHERE u.user_auth_id= 'JENNIPOT') AND app_role_id=(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_WRITE_ALL')</where>
          </delete>
      </rollback>
    </changeSet>
    
    <changeSet author="Carol Geisler" id="INS_apusrl_CARGEISL_READ_ALL_VIC">
      <insert catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_user_role">
          <column name="app_user_role_id" type="UUID" valueComputed="${POSTGRES_EXT_SCHEMA}.uuid_generate_v4()"/>
          <column name="app_user_id" type="UUID" valueComputed="(SELECT u.app_user_id FROM ${POSTGRES_SCHEMA}.app_user u WHERE u.user_auth_id= 'CARGEISL')"/>
          <column name="app_role_id" type="UUID" valueComputed="(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_ALL')"/>
          <column name="location_id" type="UUID" valueComputed="(SELECT c.courthouse_id FROM ${POSTGRES_SCHEMA}.courthouse c WHERE c.courthouse_cd = 'VIC')"/>
          <column name="updated_by" type="VARCHAR(32)" value="SCRIPT_APUSRL_PROD"/>
      </insert>
      <rollback>
         <delete catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_user_role">
              <where>app_user_id=(SELECT u.app_user_id FROM ${POSTGRES_SCHEMA}.app_user u WHERE u.user_auth_id= 'CARGEISL') AND app_role_id=(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_ALL')</where>
          </delete>
      </rollback>
    </changeSet>
    
    <changeSet author="Carol Geisler" id="INS_apusrl_HMCQUAY_READ_WRITE_ALL_CHL">
      <insert catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_user_role">
          <column name="app_user_role_id" type="UUID" valueComputed="${POSTGRES_EXT_SCHEMA}.uuid_generate_v4()"/>
          <column name="app_user_id" type="UUID" valueComputed="(SELECT u.app_user_id FROM ${POSTGRES_SCHEMA}.app_user u WHERE u.user_auth_id= 'HMCQUAY')"/>
          <column name="app_role_id" type="UUID" valueComputed="(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_WRITE_ALL')"/>
          <column name="location_id" type="UUID" valueComputed="(SELECT c.courthouse_id FROM ${POSTGRES_SCHEMA}.courthouse c WHERE c.courthouse_cd = 'CHL')"/>
          <column name="updated_by" type="VARCHAR(32)" value="SCRIPT_APUSRL_PROD"/>
      </insert>
      <rollback>
         <delete catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_user_role">
              <where>app_user_id=(SELECT u.app_user_id FROM ${POSTGRES_SCHEMA}.app_user u WHERE u.user_auth_id= 'HMCQUAY') AND app_role_id=(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_WRITE_ALL')</where>
          </delete>
      </rollback>
    </changeSet>
    
    <changeSet author="Carol Geisler" id="INS_apusrl_HMCQUAY_READ_WRITE_ALL_VIC">
      <insert catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_user_role">
          <column name="app_user_role_id" type="UUID" valueComputed="${POSTGRES_EXT_SCHEMA}.uuid_generate_v4()"/>
          <column name="app_user_id" type="UUID" valueComputed="(SELECT u.app_user_id FROM ${POSTGRES_SCHEMA}.app_user u WHERE u.user_auth_id= 'HMCQUAY')"/>
          <column name="app_role_id" type="UUID" valueComputed="(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_WRITE_ALL')"/>
          <column name="location_id" type="UUID" valueComputed="(SELECT c.courthouse_id FROM ${POSTGRES_SCHEMA}.courthouse c WHERE c.courthouse_cd = 'VIC')"/>
          <column name="updated_by" type="VARCHAR(32)" value="SCRIPT_APUSRL_PROD"/>
      </insert>
      <rollback>
         <delete catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_user_role">
              <where>app_user_id=(SELECT u.app_user_id FROM ${POSTGRES_SCHEMA}.app_user u WHERE u.user_auth_id= 'HMCQUAY') AND app_role_id=(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_WRITE_ALL')</where>
          </delete>
      </rollback>
    </changeSet>
    
    <changeSet author="Carol Geisler" id="INS_apusrl_CMCQUAY_READ_ALL_">
      <insert catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_user_role">
          <column name="app_user_role_id" type="UUID" valueComputed="${POSTGRES_EXT_SCHEMA}.uuid_generate_v4()"/>
          <column name="app_user_id" type="UUID" valueComputed="(SELECT u.app_user_id FROM ${POSTGRES_SCHEMA}.app_user u WHERE u.user_auth_id= 'CMCQUAY')"/>
          <column name="app_role_id" type="UUID" valueComputed="(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_ALL')"/>
          <column name="updated_by" type="VARCHAR(32)" value="SCRIPT_APUSRL_PROD"/>
      </insert>
      <rollback>
         <delete catalogName="${POSTGRES_CATALOG}"
              schemaName="${POSTGRES_SCHEMA}"
              tableName="app_user_role">
              <where>app_user_id=(SELECT u.app_user_id FROM ${POSTGRES_SCHEMA}.app_user u WHERE u.user_auth_id= 'CMCQUAY') AND app_role_id=(SELECT r.app_role_id FROM ${POSTGRES_SCHEMA}.app_role r WHERE r.app_role_name = 'READ_ALL')</where>
          </delete>
      </rollback>
    </changeSet>
    

    <changeSet author="Carol Geisler" id="tag1">
    	<tagDatabase tag="auth_data_dev_end"/>
    </changeSet>

</databaseChangeLog>
