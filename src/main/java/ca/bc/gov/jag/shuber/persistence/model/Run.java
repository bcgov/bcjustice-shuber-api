package ca.bc.gov.jag.shuber.persistence.model;

import ca.bc.gov.jag.shuber.persistence.AbstractAuditableVersionable;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import org.hibernate.annotations.GenericGenerator;

/**
 * Run generated by Hibernate Tools hbm2java.
 *
 * <p>Domain model for database table run.
 *
 * @author hbm2java
 * @version 391
 */
@Entity
@Table(name = "run"
    // ,schema="shersched"
)
public class Run extends AbstractAuditableVersionable implements Serializable {

    /** UID. */
    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Column(name = "run_id", nullable = false, updatable = false)
    private UUID runId;

    @NotNull
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "courthouse_id", nullable = false)
    private Courthouse courthouse;

    @NotEmpty
    @Size(min = 1, max = 100)
    @Column(name = "title", nullable = false, length = 100)
    private String title;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "run")
    private List<Assignment> assignments = new ArrayList<Assignment>(0);
    /** No args constructor. */
    public Run() {}

    /** Required args constructor. */
    public Run(
            UUID runId,
            Courthouse courthouse,
            String title,
            String createdBy,
            String updatedBy,
            Date createdDtm,
            Date updatedDtm,
            long revisionCount) {
        this.runId = runId;
        this.courthouse = courthouse;
        this.title = title;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdDtm = createdDtm;
        this.updatedDtm = updatedDtm;
        this.revisionCount = revisionCount;
    }

    /** All args constructor. */
    public Run(
            UUID runId,
            Courthouse courthouse,
            String title,
            String createdBy,
            String updatedBy,
            Date createdDtm,
            Date updatedDtm,
            long revisionCount,
            List<Assignment> assignments) {
        this.runId = runId;
        this.courthouse = courthouse;
        this.title = title;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdDtm = createdDtm;
        this.updatedDtm = updatedDtm;
        this.revisionCount = revisionCount;
        this.assignments = assignments;
    }

    public UUID getRunId() {
        return this.runId;
    }

    public void setRunId(UUID runId) {
        this.runId = runId;
    }

    public Courthouse getCourthouse() {
        return this.courthouse;
    }

    public void setCourthouse(Courthouse courthouse) {
        this.courthouse = courthouse;
    }

    public String getTitle() {
        return this.title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public List<Assignment> getAssignments() {
        return this.assignments;
    }

    public void setAssignments(List<Assignment> assignments) {
        this.assignments = assignments;
    }
    
    @Transient
	@Override
	public String getIdPath() {
		return "/runs/" + runId;
	}
}
