package ca.bc.gov.jag.shuber.persistence.model;

import java.io.Serializable;
import java.time.Instant;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.annotations.GenericGenerator;

import ca.bc.gov.jag.shuber.persistence.AbstractAuditableVersionable;

/**
 * Assignment generated by Hibernate Tools hbm2java.
 *
 * <p>Domain model for database table assignment.
 *
 * @author hbm2java
 * @version 391
 */
@Entity
@Table(name = "assignment"
    // ,schema="shersched"
)
public class Assignment extends AbstractAuditableVersionable implements Serializable {

    /** UID. */
    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Column(name = "assignment_id", nullable = false, updatable = false)
    private UUID assignmentId;

    @NotNull
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "courthouse_id", nullable = false)
    private Courthouse courthouse;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "courtroom_id")
    private Courtroom courtroom;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "jail_role_code")
    private JailRoleCode jailRoleCode;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "other_assign_code")
    private OtherAssignCode otherAssignCode;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "run_id")
    private Run run;

    @NotNull
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "work_section_code", nullable = false)
    private WorkSectionCode workSectionCode;

    @NotEmpty
    @Size(min = 1, max = 100)
    @Column(name = "title", nullable = false, length = 100)
    private String title;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "assignment")
    private List<DutyRecurrence> dutyRecurrences = new ArrayList<DutyRecurrence>(0);

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "assignment")
    private List<Duty> duties = new ArrayList<Duty>(0);
    
    /** No args constructor. */
    public Assignment() {}

    /** Required args constructor. */
    public Assignment(
            UUID assignmentId,
            Courthouse courthouse,
            WorkSectionCode workSectionCode,
            String title,
            String createdBy,
            String updatedBy,
            Instant createdDtm,
            Instant updatedDtm,
            long revisionCount) {
        this.assignmentId = assignmentId;
        this.courthouse = courthouse;
        this.workSectionCode = workSectionCode;
        this.title = title;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdDtm = createdDtm;
        this.updatedDtm = updatedDtm;
        this.revisionCount = revisionCount;
    }

    /** All args constructor. */
    public Assignment(
            UUID assignmentId,
            Courthouse courthouse,
            Courtroom courtroom,
            JailRoleCode jailRoleCode,
            OtherAssignCode otherAssignCode,
            Run run,
            WorkSectionCode workSectionCode,
            String title,
            String createdBy,
            String updatedBy,
            Instant createdDtm,
            Instant updatedDtm,
            long revisionCount,
            List<DutyRecurrence> dutyRecurrences,
            List<Duty> duties) {
        this.assignmentId = assignmentId;
        this.courthouse = courthouse;
        this.courtroom = courtroom;
        this.jailRoleCode = jailRoleCode;
        this.otherAssignCode = otherAssignCode;
        this.run = run;
        this.workSectionCode = workSectionCode;
        this.title = title;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdDtm = createdDtm;
        this.updatedDtm = updatedDtm;
        this.revisionCount = revisionCount;
        this.dutyRecurrences = dutyRecurrences;
        this.duties = duties;
    }

    public UUID getAssignmentId() {
        return this.assignmentId;
    }

    public void setAssignmentId(UUID assignmentId) {
        this.assignmentId = assignmentId;
    }

    public Courthouse getCourthouse() {
        return this.courthouse;
    }

    public void setCourthouse(Courthouse courthouse) {
        this.courthouse = courthouse;
    }

    public Courtroom getCourtroom() {
        return this.courtroom;
    }

    public void setCourtroom(Courtroom courtroom) {
        this.courtroom = courtroom;
    }

    public JailRoleCode getJailRoleCode() {
        return this.jailRoleCode;
    }

    public void setJailRoleCode(JailRoleCode jailRoleCode) {
        this.jailRoleCode = jailRoleCode;
    }

    public OtherAssignCode getOtherAssignCode() {
        return this.otherAssignCode;
    }

    public void setOtherAssignCode(OtherAssignCode otherAssignCode) {
        this.otherAssignCode = otherAssignCode;
    }

    public Run getRun() {
        return this.run;
    }

    public void setRun(Run run) {
        this.run = run;
    }

    public WorkSectionCode getWorkSectionCode() {
        return this.workSectionCode;
    }

    public void setWorkSectionCode(WorkSectionCode workSectionCode) {
        this.workSectionCode = workSectionCode;
    }

    public String getTitle() {
        return this.title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public List<DutyRecurrence> getDutyRecurrences() {
        return this.dutyRecurrences;
    }

    public void setDutyRecurrences(List<DutyRecurrence> dutyRecurrences) {
        this.dutyRecurrences = dutyRecurrences;
    }

    public List<Duty> getDuties() {
        return this.duties;
    }

    public void setDuties(List<Duty> duties) {
        this.duties = duties;
    }
    
    @Transient
	@Override
	public String getIdPath() {
		return "/assignments/" + assignmentId;
	}
}
