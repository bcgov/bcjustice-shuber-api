package ca.bc.gov.jag.shuber.persistence.model;

import java.io.Serializable;
import java.time.Instant;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Size;

import org.hibernate.annotations.GenericGenerator;

import ca.bc.gov.jag.shuber.persistence.AbstractAuditableVersionable;

/**
 * Address generated by Hibernate Tools hbm2java.
 *
 * <p>Domain model for database table address.
 *
 * @author hbm2java
 * @version 391
 */
@Entity
@Table(name = "address"
    // ,schema="shersched"
)
public class Address extends AbstractAuditableVersionable implements Serializable {

    /** UID. */
    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Column(name = "address_id", nullable = false, updatable = false)
    private UUID addressId;

    @NotEmpty
    @Size(min = 1, max = 100)
    @Column(name = "st_address", nullable = false, length = 100)
    private String stAddress;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "address")
    private List<Courthouse> courthouses = new ArrayList<Courthouse>(0);
    
    /** No args constructor. */
    public Address() {}

    /** Required args constructor. */
    public Address(
            UUID addressId,
            String stAddress,
            String createdBy,
            String updatedBy,
            Instant createdDtm,
            Instant updatedDtm,
            long revisionCount) {
        this.addressId = addressId;
        this.stAddress = stAddress;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdDtm = createdDtm;
        this.updatedDtm = updatedDtm;
        this.revisionCount = revisionCount;
    }

    /** All args constructor. */
    public Address(
            UUID addressId,
            String stAddress,
            String createdBy,
            String updatedBy,
            Instant createdDtm,
            Instant updatedDtm,
            long revisionCount,
            List<Courthouse> courthouses) {
        this.addressId = addressId;
        this.stAddress = stAddress;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdDtm = createdDtm;
        this.updatedDtm = updatedDtm;
        this.revisionCount = revisionCount;
        this.courthouses = courthouses;
    }

    public UUID getAddressId() {
        return this.addressId;
    }

    public void setAddressId(UUID addressId) {
        this.addressId = addressId;
    }

    public String getStAddress() {
        return this.stAddress;
    }

    public void setStAddress(String stAddress) {
        this.stAddress = stAddress;
    }

    public List<Courthouse> getCourthouses() {
        return this.courthouses;
    }

    public void setCourthouses(List<Courthouse> courthouses) {
        this.courthouses = courthouses;
    }
    
    @Transient
	@Override
	public String getIdPath() {
		return "/addresses/" + addressId;
	}
}
